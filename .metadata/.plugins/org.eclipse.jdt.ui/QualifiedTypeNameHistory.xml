<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="bt.core.algorithms.graph.BFS"/>
<fullyQualifiedTypeName name="bt.core.collections.lists.ArrayList"/>
<fullyQualifiedTypeName name="bt.core.collections.queues.Queue"/>
<fullyQualifiedTypeName name="bt.core.collections.iterators.Iterator"/>
<fullyQualifiedTypeName name="javax.print.attribute.Size2DSyntax"/>
<fullyQualifiedTypeName name="bt.mock.algorithms.graph.MockAdjacentList"/>
<fullyQualifiedTypeName name="bt.collections.graphs.AdjacentMatrix"/>
<fullyQualifiedTypeName name="bt.mock.algorithms.graph.MockAdjacentMatrix"/>
<fullyQualifiedTypeName name="java.util.Arrays"/>
<fullyQualifiedTypeName name="bt.collections.interfaces.Entry"/>
<fullyQualifiedTypeName name="bt.algorithms.comparators.NaturalComparator"/>
<fullyQualifiedTypeName name="bt.collections.interfaces.Map"/>
<fullyQualifiedTypeName name="bt.collections.interfaces.IEntry"/>
<fullyQualifiedTypeName name="bt.collections.iterators.ReverseIterator"/>
<fullyQualifiedTypeName name="bt.exceptions.IteratorOutOfBoundsException"/>
<fullyQualifiedTypeName name="bt.collections.interfaces.IEntry2"/>
<fullyQualifiedTypeName name="bt.algorithms.interfaces.Comparator"/>
<fullyQualifiedTypeName name="bt.collections.interfaces.Map2"/>
<fullyQualifiedTypeName name="bt.collections.trees.BEntry"/>
<fullyQualifiedTypeName name="bt.collections.interfaces.IBNode"/>
<fullyQualifiedTypeName name="bt.collections.iterators.ArrayIterator"/>
<fullyQualifiedTypeName name="bt.collections.graphs.Graph"/>
<fullyQualifiedTypeName name="bt.collections.lists.DirtyListDecorator"/>
<fullyQualifiedTypeName name="bt.collections.lists.ListDecorator"/>
<fullyQualifiedTypeName name="bt.collections.queues.Queue"/>
<fullyQualifiedTypeName name="bt.collections.interfaces.IQueue"/>
<fullyQualifiedTypeName name="bt.collections.iterators.Iterator"/>
<fullyQualifiedTypeName name="bt.collections.lists.LinkedList"/>
<fullyQualifiedTypeName name="bt.collections.lists.RatajListRec"/>
<fullyQualifiedTypeName name="bt.algorithms.interfaces.ListOneElemSorter"/>
<fullyQualifiedTypeName name="bt.algorithms.interfaces.ListSorter"/>
<fullyQualifiedTypeName name="bt.collections.interfaces.List"/>
<fullyQualifiedTypeName name="bt.collections.lists.ArrayList"/>
<fullyQualifiedTypeName name="java.util.Optional"/>
<fullyQualifiedTypeName name="bt.OptionalTemp"/>
<fullyQualifiedTypeName name="bt.collections.graphs.GraphIndirected"/>
<fullyQualifiedTypeName name="bt.algorithms.graph.GraphIndirected"/>
<fullyQualifiedTypeName name="bt.algorithms.interfaces.IGraf"/>
<fullyQualifiedTypeName name="java.util.Hashtable"/>
<fullyQualifiedTypeName name="bt.algorithms.interfaces.IKrawedz"/>
<fullyQualifiedTypeName name="java.util.Iterator"/>
<fullyQualifiedTypeName name="java.util.AbstractMap"/>
<fullyQualifiedTypeName name="java.util.AbstractSet"/>
<fullyQualifiedTypeName name="java.util.Map.Entry"/>
<fullyQualifiedTypeName name="bt.exceptions.EdgeContainsWrongVerticeException"/>
<fullyQualifiedTypeName name="org.junit.FixMethodOrder"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="java.util.HashMap"/>
<fullyQualifiedTypeName name="bt.algorithms.interfaces.IGrafC07"/>
<fullyQualifiedTypeName name="bt.algorithms.interfaces.IGraphComponents"/>
<fullyQualifiedTypeName name="java.util.LinkedList"/>
<fullyQualifiedTypeName name="java.util.Set"/>
<fullyQualifiedTypeName name="java.util.TreeSet"/>
<fullyQualifiedTypeName name="java.util.Queue"/>
<fullyQualifiedTypeName name="java.util.concurrent.LinkedBlockingQueue"/>
<fullyQualifiedTypeName name="java.util.TreeMap"/>
<fullyQualifiedTypeName name="java.util.Map"/>
<fullyQualifiedTypeName name="java.util.HashSet"/>
<fullyQualifiedTypeName name="java.util.stream.Collectors"/>
</qualifiedTypeNameHistroy>
