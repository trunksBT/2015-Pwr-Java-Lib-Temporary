package Bt.Tests.Core.Collections;

import java.util.Hashtable;
import java.util.Map;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

import Bt.Core.Collections.OneDimTable;
import junit.framework.TestCase;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)

public class TestIndirectedGraph extends TestCase{

    @Test
    public void testCTOR_Contains()
    {
        //arrange
    	int[][] connectionMatrix = new int[][]{
    		  { 0, 4, 0, 0,},
    		  { 4, 0, 3, 1,},
    		  { 0, 3, 0, 2,},
    		  { 0, 1, 2, 0,},
    		};
    		
    	Hashtable<String,Integer> vertices = new Hashtable<String,Integer>();
    	vertices.put("Krakow", 0);
    	vertices.put("Gdynia", 1);
    	vertices.put("Ostrowiec", 2);
    	vertices.put("Wroclaw", 3);
    	
    	boolean expectedVal = true;
    	     
        //act
    	IndirectedGraph<String,Integer> _network = new IndirectedGraph<>(connectionMatrix,vertices);
    	boolean reachedVal = _network.wierzcholki().contains("Krakow");
        //assert
        boolean reachedLogic = reachedVal == expectedVal;
        boolean expectedLogic = true;
        boolean result = !(expectedLogic ^ reachedLogic);
        assertTrue(result);
    }
}
