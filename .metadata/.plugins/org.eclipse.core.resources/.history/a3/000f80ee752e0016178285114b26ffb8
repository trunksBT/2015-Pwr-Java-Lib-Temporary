package bt.collections.trees;

public class RatBST2 {
	public static void preorder(RatNode2 root) {
		if( root == null )
			System.out.println( "Nil" );
		else {
			System.out.println( root.val );
			preorder(root.left);
			preorder(root.right);
		}
	}

	public static int maxVal(RatNode2 root) throws NullPointerException{
		return root.right == null ? root.val :
			maxVal(root.right);
	}

	public static int assignAmountOfInternalNodes(RatNode2 root) {
		return root == null ? 0 : 
			(root.ammOfInternalNodes = 
					assignAmountOfInternalNodes(root.left) + 1 +
						assignAmountOfInternalNodes(root.right));
	}

	public static int assignAndReturnAmountOfLowerNodes(RatNode2 root) {
		// TODO Auto-generated method stub
		return 0;
	}

	public static int height(RatNode2 root) {
		// TODO Auto-generated method stub
		return 0;
	}

	public static int countLeaves(RatNode2 root) {
		if( root == null )
			return 0;
		else if ( root.left == null && root.right == null )
			return 1;
		else
			countLeaves(root.left) + countLeaves(root.right);
	}

	public static int countExternalNodes(RatNode2 root) {
		return root == null ? 1 : 
				countExternalNodes(root.left ) + countExternalNodes(root.right);
	}

	public static int countInternalNodes(RatNode2 root) {
		return root == null ? 0 :
			countInternalNodes(root.left) + 1 + countInternalNodes(root.right);
	}
}
