package bt.tests.core.collections.iterators;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

import bt.core.collections.iterators.ArrayIterator;
import bt.core.geometry.elementaries.Point;
import junit.framework.TestCase;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class TestArrayIterator extends TestCase
{				
	//Test_MethodName_StateUnderTest_Expect_ExpectedBehavior
	@Test
	public void test_CTOR_AggregateIterator_True()
	{
	    //arrange
	    Point[] points = { 
	    		new Point(0,0),
	    		new Point(1,1),
	    		new Point(2,2)};
	    
	    ArrayIterator pointsIter = new ArrayIterator(points);
	    Point expVal = new Point(0,0);
	    pointsIter.next();
	    Point rcVal = (Point) pointsIter.current();
	    boolean expBool = true;
	      
	    //act
	    boolean rcBool = rcVal.equals(expVal);
	    
	    //assert
	    boolean result = !(expBool ^ rcBool);
	    assertTrue(result);
	}	
	
	//Test_StateUnderTest_Expect_ExpectedBehavior
	@Test
	public void test_WhileLoop_Expect_True()
	{
	    //arrange
	    Point[] points = { 
	    		new Point(0,0),
	    		new Point(1,1),
	    		new Point(2,2)};
	    
	    ArrayIterator pointsIter = new ArrayIterator(points);
	    pointsIter.first();
	    
	    while(pointsIter.isDone()) {
	    	pointsIter.next();
	    	System.out.println( pointsIter.current() );
	    }
	    
	    assertTrue(true);
	}	
	
//	//Test_MethodName_StateUnderTest_Expect_ExpectedBehavior
//	@Test
//	public void test__AggregateIterator_True()
//	{
//	    //arrange
//	    Point[] points = { 
//	    		new Point(0,0),
//	    		new Point(1,1),
//	    		new Point(2,2)};
//	    ArrayIterator pointsIter = new ArrayIterator(points);
//	    Point expVal = new Point(0,0);
//	    pointsIter.next();
//	    Point rcVal = (Point) pointsIter.current();
//	    boolean expBool = true;
//	      
//	    //act
//	    boolean rcBool = rcVal.equals(expVal);
//	    
//	    //assert
//	    boolean result = !(expBool ^ rcBool);
//	    assertTrue(result);
//	}					
}
