package bt.collections.lists;

public class RatajList {
	RatajElem root;
	
	public RatajList(RatajElem head) {
		this.root = head;
	}

	public RatajList() {
		this(null);
	}

	public static void print(RatajElem hd) {
		while(hd != null) {
			System.out.println( hd.val );
			hd = hd.next;
		}
	}

	public int maxVal() {
		RatajElem hd = root;
		int theBiggest = -1;
		if(hd != null) {
			theBiggest = hd.val;
			while(hd.next != null) {
				if(theBiggest < hd.next.val)
					theBiggest = hd.next.val;
				hd = hd.next;
			}
		}
		return theBiggest;
	}

	public void add(int val) {
		RatajElem hd = root;
		
		if(hd != null) {
			while(hd.next!=null)
				hd = hd.next;
			
			hd.next = new RatajElem(val);
		}else
			root = new RatajElem(val);
	}

	public int size() {
		RatajElem hd = root;
		int retVal = 0;
		
		while(hd != null) {
			retVal++;
			hd = hd.next;
		}
		
		return retVal;
	}

	public RatajElem getElem(int searchedVal) {
		RatajElem hd = root;
		RatajElem retVal = null;
		
		while(hd != null && retVal == null) {
			if(hd.val == searchedVal)
				retVal = hd;
			hd = hd.next;
		}
		
		return retVal;
	}

//	public void attachAfter(RatajElem yetAdded, int toAdd) {
//		RatajElem hd = root;
//		
//		if( hd == null && yetAdded == null)
//			hd = new RatajElem(toAdd);
//		else
//			while(hd != null)
//			{
//				if(hd.val == yetAdded.val) {
//					RatajElem tempNext = hd.next;
//					hd.next = new RatajElem(toAdd,tempNext);
//					hd = hd.next;
//				}
//				else
//					hd = hd.next;
//			}
		
	public void attachAfter(RatajElem afterWhich, int val) {
		if( afterWhich == null )
			root = new RatajElem(val,root);
		else
			afterWhich.next = new RatajElem(val, afterWhich.next);
		
	}

	public void delete(int toDel) {
		RatajElem hd = root;
		
		if( hd == null ) {}
		else if( hd.next == null && hd.val == toDel)
			root = null;
		else	
			while( hd.next != null ) {
				if(hd.next.val == toDel)
					hd.next = hd.next.next;
				else
					hd = hd.next;
			}
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
//	RatajElem poc;
//	
//	public RatajList() {
//		this.poc = null;
//	}
//	
//	public RatajList(RatajElem poc) {
//		this.poc = poc;
//	}
//	
//	public static void print(RatajElem l) {
//		while(l != null) {
//			System.out.println( l.val + ',' );
//			l = l.next;
//		}
//	}
//	
//	public int maxVal() {
//		if( poc == null)
//			throw new NullPointerException();
//		
//		int max = poc.val;	
//		RatajElem l = poc.next;
//		
//		while( l != null ) {
//			if( l.val > max )
//				max = l.val;
//			l = l.next;
//		}
//		
//		return max;
//	}
//
//	public void add(int val) {
//		RatajElem newElem = new RatajElem(val);
//		
//		if(poc == null) poc = newElem;
//		else {
//			RatajElem l = poc;
//			while(l.next != null)
//				l = l.next;
//			
//			l.next = newElem;
//		}
//	}
//
//	public int size() {
//		int retVal = 0;
//		RatajElem l = poc;
//		
//		while(l != null) {
//			l = l.next;
//			retVal++;
//		}
//		
//		return retVal;
//	}
//
//	public RatajElem getElem(int val) {
//		RatajElem l = poc;
//		
//		while( l != null && l.val!= val)
//			l = l.next;
//		
//		return l;
//	}
//
//	public void attachAfter(RatajElem afterWhich, int val) {
//		if( afterWhich == null )
//			poc = new RatajElem(val,poc);
//		else
//			afterWhich.next = new RatajElem(val, afterWhich.next);
//	}
//
//	public void delete(int toDel) {
//		if( poc != null) {
//			if( poc.val == toDel ) poc = poc.next;
//			else {
//				RatajElem l = poc;
//				while( l.next != null && l.next.val != toDel)
//					l = l.next;
//				
//				if( l.next != null )
//					l.next = l.next.next;
//			}
//		}
//	}
}















