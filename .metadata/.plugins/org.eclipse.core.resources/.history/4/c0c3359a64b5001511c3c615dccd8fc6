package Bt.Core.Reflections;

import java.lang.reflect.Field;

import Bt.Core.FileOperations.Strumien;

public class Debug implements Strumien{
	public static void fields(Object aObj)
	{
		StringBuffer info = new StringBuffer();
		Field[] fields = aObj.getClass().getDeclaredFields();
		 
		for(Field it : fields)
		{
			info.append("Pole: ");
			int modifier = it.getModifiers();
			it.setAccessible(true);
			
			info.append(it.getName());	
			info.append(" => ");
			
			info.append(it.getType().getSimpleName());	
			info.append(", ");

			try {
				info.append(it.get(aObj));
			} catch (IllegalArgumentException | IllegalAccessException e) {
				e.printStackTrace();
			}
			
			if( modifier == 2 )
				it.setAccessible(false);
				
			wyj.println( info );
		}
		
//		 public static final int PROTECTED 4 
//		 public static final int PUBLIC 1 
	}
}
