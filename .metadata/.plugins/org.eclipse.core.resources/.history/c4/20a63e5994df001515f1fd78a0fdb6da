package bt.core.collections.iterators;

public class FilterIteratorCopy implements Iterator {
	private Iterator iter;
	private Predicate pred;
	
	public FilterIteratorCopy(Iterator iter, Predicate pred) {
		this.iter = iter;
		this.pred = pred;
	}
	@Override
	public void previous() {
		filterBackwards();
	}

	@Override
	public void next() {
		filterForwards();
	}

	@Override
	public Object current() {
		return iter.current();
	}

	@Override
	public void first() {
		iter.first();
		filterForwards();
	}

	@Override
	public void last() {
		iter.last();
		filterBackwards();
	}

	@Override
	public boolean isDone() {
		return iter.isDone();
	}
	
	private void filterForwards() {
		while(!isDone() && !pred.accept(iter.current()))
			iter.next();
	}
	
	private void filterBackwards() {
		while(!isDone() && !pred.accept(iter.current()))
			iter.previous();
	}

}
