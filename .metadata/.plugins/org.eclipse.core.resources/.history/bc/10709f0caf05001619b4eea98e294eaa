package bt.core.algorithms.sorting;

import bt.core.algorithms.interfaces.Comparator;
import bt.core.algorithms.interfaces.ListSorter;
import bt.core.collections.interfaces.List;

public class QuickSort2 implements ListSorter {
	private final Comparator order;
	public QuickSort2(Comparator order) {
		this.order = order;
	}
	@Override
	public List sort(List tape) {
		quickSort(0, tape.size()-1, tape);
		return tape;
	}
	private void quickSort(int idxStart, int idxEnd, List tape) {
		if(idxEnd> idxStart) {
			int partition = partition(idxStart, idxEnd, tape);
			quickSort(idxStart, partition-1, tape);
			quickSort(partition+1, idxEnd, tape);
		}
	}
}
