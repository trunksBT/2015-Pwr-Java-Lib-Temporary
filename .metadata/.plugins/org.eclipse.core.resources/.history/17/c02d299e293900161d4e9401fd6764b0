package bt.collections.trees;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

import bt.algorithms.comparators.NaturalComparator;
import bt.collections.interfaces.Tree;
import bt.collections.trees.BST;
import bt.collections.trees.RatBST;
import bt.collections.trees.RatNode;
import junit.framework.TestCase;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)

public class TestRatBSTOrders extends TestCase {

	//Test_MethodName_StateUnderTest_Expect_ExpectedBehavior
    @Test
    public void test_preorder_Mock1()
    {
    	// arrange
    	RatNode tape = getMock1();
    	
    	// act
    	RatBST.preOrder(tape);
    	
    	// assert
    	assertTrue(true);
    }
    
	//Test_MethodName_StateUnderTest_Expect_ExpectedBehavior
    @Test
    public void test_preorder_Mock_4213657()
    {
    	// arrange
    	RatNode tape = getMockNotEmpty();
    	
    	// act
    	RatBST.preOrder(tape);
    	
    	// assert
    	assertTrue(true);
    }
    
    @Test
    public void test_postOrderReversed_Mock_4213657()
    {
    	// arrange
    	RatNode tape = getMockNotEmpty();
    	
    	// act
    	RatBST.postOrderRev(tape);
    	
    	// assert
    	assertTrue(true);
    }
    
    @Test
    public void test_postOrder_Mock_4213657()
    {
    	// arrange
    	RatNode tape = getMockNotEmpty();
    	
    	// act
    	RatBST.postOrder(tape);
    	
    	// assert
    	assertTrue(true);
    }
    
    public RatNode getMock1() {
    	return			new RatNode(4, new RatNode(3, new RatNode(2, new RatNode(1),null),null),null);
    }// lwp 01234567
    
    
    public RatNode getMockNotEmpty() {
    	return 						new RatNode(4,
    					new RatNode(2,
    				new RatNode(1, 
    	new RatNode(0),null),new RatNode(3)),
    											new RatNode(6,
    										new RatNode(5), new RatNode(7)));
    }// lwp 01234567
    
    public RatNode getMockOneElement() {
    	return new RatNode(4);
    }
}
