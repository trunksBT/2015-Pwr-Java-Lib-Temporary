package bt.core.collections.dataTypes;

import bt.core.collections.interfaces.List;
import bt.core.exceptions.EmptyQueueException;
import bt.core.exceptions.EmptyStackException;

public class Stack implements bt.core.collections.interfaces.Stack {
	private final List list;
	
	public Stack() {
		this.list = new GuardedLinkedListDouble();
	}
	
	public Stack(List list) {
		this.list = list;
	}

	@Override
	public void enqueue(Object val) {
		// TODO Auto-generated method stub
	}

	@Override
	public Object dequeue() throws EmptyQueueException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void clear() {
		list.clear();
	}

	@Override
	public int size() {
		return list.size();
	}

	@Override
	public boolean isEmpty() {
		return list.isEmpty();
	}

	@Override
	public void push(Object val) {
		// TODO Auto-generated method stub

	}

	@Override
	public Object pop() throws EmptyStackException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Object peek() throws EmptyStackException {
		// TODO Auto-generated method stub
		return null;
	}
}
