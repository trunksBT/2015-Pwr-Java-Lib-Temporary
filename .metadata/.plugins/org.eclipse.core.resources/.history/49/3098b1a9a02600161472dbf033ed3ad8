package bt.algorithms.graph;

import bt.collections.graphs.AdjacentList;
import bt.collections.graphs.Graph;
import bt.collections.interfaces.List;
import bt.collections.lists.ListDecorator;

public class BFS2<String> implements Graph<Integer,String> {

	@Override
	public int getNumberOfVerts() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public ListDecorator getAdjacents(int searchedVert) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean isVerticeDirty(int searchedVert) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void resetVerticesStory() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setDirty(int vert, boolean val) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public boolean isDirty(int vert) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean isEmpty() {
		// TODO Auto-generated method stub
		return false;
	}

	public List forAdjacentShapes(AdjacentList<String> graph) {
		// TODO Auto-generated method stub
		return null;
	}

}
