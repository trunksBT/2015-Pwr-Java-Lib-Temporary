package bt.core.collections.dataTypes.trees;

import bt.core.collections.interfaces.Tree;

public class BST2 implements Tree {

	@Override
	public Object find(Object x) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void insert(Object x) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void delete(Object x) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int size() {
		// TODO Auto-generated method stub
		return 0;
	}
//
//	@Override
//	public int hashCode() {
//		final int prime = 31;
//		int result = 1;
//		result = prime * result + ((root == null) ? 0 : root.hashCode());
//		return result;
//	}
//
//	@Override
//	public boolean equals(Object obj) {
//		if (this == obj)
//			return true;
//		if (obj == null)
//			return false;
//		if (getClass() != obj.getClass())
//			return false;
//		BST2 other = (BST2) obj;
//		if (root == null) {
//			if (other.root != null)
//				return false;
//		} else if (!root.equals(other.root))
//			return false;
//		return true;
//	}
}
