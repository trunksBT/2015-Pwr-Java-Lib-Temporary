package bt.core.algorithms.sorting;

import bt.core.algorithms.interfaces.Comparator;
import bt.core.algorithms.interfaces.ListSorter;
import bt.core.collections.interfaces.List;

public class SelectSort2 implements ListSorter {
	private final Comparator order;
	
	public SelectSort2(Comparator order) {
		this.order = order;
	}
	
	@Override
	public List sort(List tape) {
		for( int i = 0 ; i < tape.size(); i++) {
			int theLowestIdx = i;
			for ( int j = 1 ; j < tape.size()-i; j++)
				if( order.compare( tape.get(theLowestIdx), tape.get(j))< 0)
					theLowestIdx = j;
			swap(i,theLowestIdx,tape);
		}
	}

	private void swap(int left, int theLowestIdx, List tape) {
		Object oldVal = tape.get(left);
		tape.set(left,tape.get(theLowestIdx));
		tape.set(theLowestIdx,oldVal);
	}
}
