package bt.core.algorithms.sorting;

import bt.core.algorithms.interfaces.Comparator;
import bt.core.algorithms.interfaces.ListSorter;
import bt.core.collections.interfaces.List;

public class InsertSort implements ListSorter {
	private final Comparator order;
	
	public InsertSort(Comparator order) {
		this.order = order;
	}

	@Override
	public List sort(List tape) {
		if( tape== null)
			throw new NullPointerException();
		
		int size = tape.size();
		boolean found = false;
		for(int i = 1; i<size; i++) {
			Object fromQueue = tape.get(i);
			Object curr;
			for(int j = 0; j<i && !found; j++)
				if(found = order.compare(fromQueue, curr = tape.get(j))>0)
					swap(tape,i,j);
			found = false;
		}
		return tape;
	}

	private void swap(List tape, int i, int j) {
		Object oldLeft = tape.get(i);
		tape.set(i, tape.get(j));
		tape.set(j, oldLeft);
	}
}
