package bt.core.algorithms;

public class Sequences {
	public static boolean isNotAscending( int[] chain ) {
		int i = -1;
		boolean methodPred = false;
		int size = chain.length;

		i = 0;
		while(i < size-1 && chain[i] >= chain[i+1])
		i++;

return i <= size-1;
//		while(i++ < size-2) {
//			if(!(chain[i] < chain[i+1]))
//				methodPred |= true;
//			else
//				methodPred |= false;
//		}		
		
//		return methodPred;
		
//		works
//		public static boolean isNotAscending( int[] chain ) {
//			int i = -1;
//			boolean methodPred = false;
//			int size = chain.length;
//
//			while(i++ < size-2) {
//				if(chain[i] >= chain[i+1])
//					methodPred |= true;
//				else
//					methodPred |= false;
//			}		
//			
//			return methodPred;
//		
//		
//		while(i < size-1 && chain[i] >= chain[i+1])
//				i++;
//		
//		return i <= size-1;
	}
}
