package bt.core.algorithms.sorting;

import bt.core.algorithms.interfaces.Comparator;
import bt.core.algorithms.interfaces.ListSorter;
import bt.core.collections.dataTypes.ArrayList;
import bt.core.collections.interfaces.List;

public class MergeSortRec implements ListSorter {
	private final Comparator order;

	public MergeSortRec(Comparator order) {
		this.order = order;
	}

	@Override
	public List sort(List tape) {
		return mergesort(tape, 0, tape.size() -1);
	}

	private List mergesort(List tape, int startIdx, int endIdx) {
		if(startIdx == endIdx) {
			List result = new ArrayList();
			result.add(tape.get(startIdx));
			return result;
		}
		int splitIdx = startIdx + (endIdx- startIdx)/2;
		return merge(mergesort(tape, startIdx, splitIdx),
				mergesort(tape, splitIdx+1, endIdx));
	}
}
