package bt.tests.core.collections.dataTypes;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

import bt.core.collections.dataTypes.ArrayList;
import bt.core.collections.interfaces.List;
import junit.framework.TestCase;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)

public class TestArrayList extends TestCase {
	
	//Test_MethodName_StateUnderTest_Expect_ExpectedBehavior
    @Test
    public void test_add_emptyList_size1()
    {
    	// arrange
    	List tape = new ArrayList();
    	Integer addedVal = new Integer(0);
    	int expSize = 1;
    	
    	// act
    	tape.add(addedVal);
    	
    	// assert
    	assertSame(addedVal, tape.get(0));
    	assertEquals(tape.size(), expSize);
    }
    
	//Test_MethodName_StateUnderTest_Expect_ExpectedBehavior
    @Test
    public void test_add_NotEmptyList_size2()
    {
    	// arrange
    	List tape = new ArrayList();
    	Integer addedVal = new Integer(0);
    	int expSize = 2;
    	
    	// act
    	tape.add(new Integer(1));
    	tape.add(addedVal);
    	
    	// assert
    	assertSame(addedVal, tape.get(1));
    	assertEquals(tape.size(), expSize);
    }
    
	//Test_MethodName_StateUnderTest_Expect_ExpectedBehavior
    @Test
    public void test_clear()
    {
    	// arrange
    	List tape = new ArrayList();
    	
    	// act
    	// assert
    }
    
	//Test_MethodName_StateUnderTest_Expect_ExpectedBehavior
    @Test
    public void test_contains()
    {
    	// arrange
    	List tape = new ArrayList();
    	
    	// act
    	// assert
    }
    
	//Test_MethodName_StateUnderTest_Expect_ExpectedBehavior
    @Test
    public void test_delete_byIdx()
    {
    	// arrange
    	List tape = new ArrayList();
    	
    	// act
    	// assert
    }
    
	//Test_MethodName_StateUnderTest_Expect_ExpectedBehavior
    @Test
    public void test_delete_byVal()
    {
    	// arrange
    	List tape = new ArrayList();
    	
    	// act
    	// assert
    }
    
	//Test_MethodName_StateUnderTest_Expect_ExpectedBehavior
    @Test
    public void test_get()
    {
    	// arrange
    	List tape = new ArrayList();
    	
    	// act
    	// assert
    }
    
	//Test_MethodName_StateUnderTest_Expect_ExpectedBehavior
    @Test
    public void test_indexOf()
    {
    	// arrange
    	List tape = new ArrayList();
    	
    	// act
    	// assert
    }
    
	//Test_MethodName_StateUnderTest_Expect_ExpectedBehavior
    @Test
    public void test_insert()
    {
    	// arrange
    	List tape = new ArrayList();
    	
    	// act
    	// assert
    }
    
	//Test_MethodName_StateUnderTest_Expect_ExpectedBehavior
    @Test
    public void test_isEmpty()
    {
    	// arrange
    	List tape = new ArrayList();
    	
    	// act
    	// assert
    }
    
	//Test_MethodName_StateUnderTest_Expect_ExpectedBehavior
    @Test
    public void test_set()
    {
    	// arrange
    	List tape = new ArrayList();
    	
    	// act
    	// assert
    }
    
	//Test_MethodName_StateUnderTest_Expect_ExpectedBehavior
    @Test
    public void test_size()
    {
    	// arrange
    	List tape = new ArrayList();
    	
    	// act
    	// assert
    }
}
