<?xml version="1.0" encoding="UTF-8"?><testrun name="AllTests" project="BT-Library-Java" tests="32" started="32" failures="1" errors="0" ignored="0">
  <testsuite name="Bt.Tests.AllTests" time="0.008">
    <testsuite name="Bt.Tests.Core.Collections.AllTestsCollections" time="0.005">
      <testsuite name="Bt.Tests.Core.Collections.TestSetNatural" time="0.002">
        <testcase name="testAddRepetitedValue" classname="Bt.Tests.Core.Collections.TestSetNatural" time="0.0"/>
        <testcase name="testAddUnrepetitedValue1" classname="Bt.Tests.Core.Collections.TestSetNatural" time="0.0"/>
        <testcase name="testAddUnrepetitedValue2" classname="Bt.Tests.Core.Collections.TestSetNatural" time="0.0"/>
        <testcase name="testEmptyCTORandCTOR" classname="Bt.Tests.Core.Collections.TestSetNatural" time="0.0"/>
        <testcase name="testRemoveTrue" classname="Bt.Tests.Core.Collections.TestSetNatural" time="0.001">
          <failure>junit.framework.AssertionFailedError&#13;
	at junit.framework.Assert.fail(Assert.java:55)&#13;
	at junit.framework.Assert.assertTrue(Assert.java:22)&#13;
	at junit.framework.Assert.assertTrue(Assert.java:31)&#13;
	at junit.framework.TestCase.assertTrue(TestCase.java:201)&#13;
	at Bt.Tests.Core.Collections.TestSetNatural.testRemoveTrue(TestSetNatural.java:157)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at junit.framework.TestCase.runTest(TestCase.java:176)&#13;
	at junit.framework.TestCase.runBare(TestCase.java:141)&#13;
	at junit.framework.TestResult$1.protect(TestResult.java:122)&#13;
	at junit.framework.TestResult.runProtected(TestResult.java:142)&#13;
	at junit.framework.TestResult.run(TestResult.java:125)&#13;
	at junit.framework.TestCase.run(TestCase.java:129)&#13;
	at junit.framework.TestSuite.runTest(TestSuite.java:252)&#13;
	at junit.framework.TestSuite.run(TestSuite.java:247)&#13;
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
        </testcase>
        <testcase name="testUnrepetiveCTORandSequence" classname="Bt.Tests.Core.Collections.TestSetNatural" time="0.001"/>
        <testcase name="testUnrepetiveCTORandUnsequence1" classname="Bt.Tests.Core.Collections.TestSetNatural" time="0.0"/>
        <testcase name="testUnrepetiveCTORandUnsequence2" classname="Bt.Tests.Core.Collections.TestSetNatural" time="0.0"/>
      </testsuite>
      <testsuite name="Bt.Tests.Core.Collections.TestStackNatural" time="0.003">
        <testcase name="testEqualsQueuesTheSameFalse" classname="Bt.Tests.Core.Collections.TestStackNatural" time="0.0"/>
        <testcase name="testEqualsQueuesTheSameTrue" classname="Bt.Tests.Core.Collections.TestStackNatural" time="0.001"/>
        <testcase name="testIsEmptyFalse" classname="Bt.Tests.Core.Collections.TestStackNatural" time="0.0"/>
        <testcase name="testIsEmptyTrue" classname="Bt.Tests.Core.Collections.TestStackNatural" time="0.0"/>
        <testcase name="testMergeTrue" classname="Bt.Tests.Core.Collections.TestStackNatural" time="0.0"/>
        <testcase name="testPopFalse" classname="Bt.Tests.Core.Collections.TestStackNatural" time="0.0"/>
        <testcase name="testPopTrue" classname="Bt.Tests.Core.Collections.TestStackNatural" time="0.001"/>
        <testcase name="testPushFalse" classname="Bt.Tests.Core.Collections.TestStackNatural" time="0.0"/>
        <testcase name="testPushTrue" classname="Bt.Tests.Core.Collections.TestStackNatural" time="0.001"/>
      </testsuite>
    </testsuite>
    <testsuite name="Bt.Tests.Core.Geometry.AllTestsCoreGeometry" time="0.003">
      <testsuite name="Bt.Tests.Core.Geometry.Complex.TestLineSegment" time="0.001">
        <testcase name="testEqualsLineSegmentTheSameButReversedPointsTrue2" classname="Bt.Tests.Core.Geometry.Complex.TestLineSegment" time="0.001"/>
        <testcase name="testEqualsLineSegmentTheSameFalse1" classname="Bt.Tests.Core.Geometry.Complex.TestLineSegment" time="0.0"/>
        <testcase name="testEqualsLineSegmentTheSameFalse2" classname="Bt.Tests.Core.Geometry.Complex.TestLineSegment" time="0.0"/>
        <testcase name="testEqualsLineSegmentTheSameTrue1" classname="Bt.Tests.Core.Geometry.Complex.TestLineSegment" time="0.0"/>
        <testcase name="testLengthFalse" classname="Bt.Tests.Core.Geometry.Complex.TestLineSegment" time="0.0"/>
        <testcase name="testLengthTrue" classname="Bt.Tests.Core.Geometry.Complex.TestLineSegment" time="0.0"/>
        <testcase name="testShiftLineSegmentFalse" classname="Bt.Tests.Core.Geometry.Complex.TestLineSegment" time="0.0"/>
        <testcase name="testShiftLineSegmentTrue" classname="Bt.Tests.Core.Geometry.Complex.TestLineSegment" time="0.0"/>
      </testsuite>
      <testsuite name="Bt.Tests.Core.Geometry.Elementaries.TestPoint" time="0.002">
        <testcase name="testDistancePointsOthersFalse" classname="Bt.Tests.Core.Geometry.Elementaries.TestPoint" time="0.001"/>
        <testcase name="testDistancePointsOthersTrue" classname="Bt.Tests.Core.Geometry.Elementaries.TestPoint" time="0.0"/>
        <testcase name="testDistancePointsTheSameTrue" classname="Bt.Tests.Core.Geometry.Elementaries.TestPoint" time="0.0"/>
        <testcase name="testEqualsPointsOtherFalse" classname="Bt.Tests.Core.Geometry.Elementaries.TestPoint" time="0.0"/>
        <testcase name="testEqualsPointsTheSameTrue" classname="Bt.Tests.Core.Geometry.Elementaries.TestPoint" time="0.0"/>
        <testcase name="testShiftPointsFalse" classname="Bt.Tests.Core.Geometry.Elementaries.TestPoint" time="0.0"/>
        <testcase name="testShiftPointsTrue" classname="Bt.Tests.Core.Geometry.Elementaries.TestPoint" time="0.001"/>
      </testsuite>
    </testsuite>
  </testsuite>
</testrun>
