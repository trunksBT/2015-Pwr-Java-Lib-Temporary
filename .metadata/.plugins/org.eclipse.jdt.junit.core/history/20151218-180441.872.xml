<?xml version="1.0" encoding="UTF-8"?><testrun name="AllTests" project="BT-Library-Java" tests="71" started="71" failures="0" errors="1" ignored="0">
  <testsuite name="Bt.Tests.AllTests" time="0.001">
    <testsuite name="Bt.Tests.Core.Collections.Collections" time="0.001">
      <testsuite name="Bt.Tests.Core.Collections.TestSetNatural" time="0.0">
        <testcase name="testAddRepetitedValue" classname="Bt.Tests.Core.Collections.TestSetNatural" time="0.0"/>
        <testcase name="testAddToEmpty" classname="Bt.Tests.Core.Collections.TestSetNatural" time="0.0"/>
        <testcase name="testAddUnrepetitedValue1" classname="Bt.Tests.Core.Collections.TestSetNatural" time="0.0"/>
        <testcase name="testAddUnrepetitedValue2" classname="Bt.Tests.Core.Collections.TestSetNatural" time="0.0"/>
        <testcase name="testEmptyCTORandCTOR" classname="Bt.Tests.Core.Collections.TestSetNatural" time="0.0"/>
        <testcase name="testRemoveFalse1" classname="Bt.Tests.Core.Collections.TestSetNatural" time="0.0"/>
        <testcase name="testRemoveFalse2" classname="Bt.Tests.Core.Collections.TestSetNatural" time="0.0"/>
        <testcase name="testRemoveFromEmpty" classname="Bt.Tests.Core.Collections.TestSetNatural" time="0.0"/>
        <testcase name="testRemoveMultiOccurenceTrue1" classname="Bt.Tests.Core.Collections.TestSetNatural" time="0.0"/>
        <testcase name="testRemoveOnesOccurenceTrue1" classname="Bt.Tests.Core.Collections.TestSetNatural" time="0.0"/>
        <testcase name="testUnrepetiveCTORandSequence" classname="Bt.Tests.Core.Collections.TestSetNatural" time="0.0"/>
        <testcase name="testUnrepetiveCTORandUnsequence1" classname="Bt.Tests.Core.Collections.TestSetNatural" time="0.0"/>
        <testcase name="testUnrepetiveCTORandUnsequence2" classname="Bt.Tests.Core.Collections.TestSetNatural" time="0.0"/>
      </testsuite>
      <testsuite name="Bt.Tests.Core.Collections.TestStackNatural" time="0.0">
        <testcase name="testEqualsQueuesTheSameFalse" classname="Bt.Tests.Core.Collections.TestStackNatural" time="0.0"/>
        <testcase name="testEqualsQueuesTheSameTrue" classname="Bt.Tests.Core.Collections.TestStackNatural" time="0.0"/>
        <testcase name="testIsEmptyFalse" classname="Bt.Tests.Core.Collections.TestStackNatural" time="0.0"/>
        <testcase name="testIsEmptyTrue" classname="Bt.Tests.Core.Collections.TestStackNatural" time="0.0"/>
        <testcase name="testMergeTrue" classname="Bt.Tests.Core.Collections.TestStackNatural" time="0.0"/>
        <testcase name="testPopFalse" classname="Bt.Tests.Core.Collections.TestStackNatural" time="0.0"/>
        <testcase name="testPopTrue" classname="Bt.Tests.Core.Collections.TestStackNatural" time="0.0"/>
        <testcase name="testPushFalse" classname="Bt.Tests.Core.Collections.TestStackNatural" time="0.0"/>
        <testcase name="testPushTrue" classname="Bt.Tests.Core.Collections.TestStackNatural" time="0.0"/>
      </testsuite>
      <testsuite name="Bt.Tests.Core.Collections.TestOneDimTable" time="0.0">
        <testcase name="testTableSize" classname="Bt.Tests.Core.Collections.TestOneDimTable" time="0.0"/>
      </testsuite>
      <testsuite name="Bt.Tests.Core.Collections.TestOneDimTableNatural_Imperative" time="0.001">
        <testcase name="test_ASig_Method_TableState_NewElRelation" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Imperative" time="0.0"/>
        <testcase name="test_Equal_TheSame" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Imperative" time="0.0"/>
        <testcase name="test_Insert_Empty" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Imperative" time="0.0"/>
        <testcase name="test_Insert_Filled_EqualToLeftLimit" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Imperative" time="0.0"/>
        <testcase name="test_Insert_Filled_EqualToRightLimit" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Imperative" time="0.0"/>
        <testcase name="test_Insert_Filled_EqualToSecond" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Imperative" time="0.0"/>
        <testcase name="test_Insert_Filled_Internal" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Imperative" time="0.0"/>
        <testcase name="test_Insert_Filled_LastButOne" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Imperative" time="0.0"/>
        <testcase name="test_Insert_Filled_Latter" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Imperative" time="0.0"/>
        <testcase name="test_Insert_Filled_NewLeftLimit" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Imperative" time="0.001"/>
        <testcase name="test_Insert_Filled_NewRightLimit" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Imperative" time="0.0"/>
        <testcase name="test_Insert_Null_0" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Imperative" time="0.0"/>
        <testcase name="test_Insert_Single_Equal" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Imperative" time="0.0"/>
        <testcase name="test_Insert_Single_Higher" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Imperative" time="0.0"/>
        <testcase name="test_Insert_Single_Lower" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Imperative" time="0.0"/>
      </testsuite>
      <testsuite name="Bt.Tests.Core.Collections.TestOneDimTableNatural_Object" time="0.0">
        <testcase name="test_ASig_Method_TableState_NewElRelation" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Object" time="0.0"/>
        <testcase name="test_Insert_Empty" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Object" time="0.0"/>
        <testcase name="test_Insert_Filled_EqualToLeftLimit" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Object" time="0.0"/>
        <testcase name="test_Insert_Filled_EqualToRightLimit" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Object" time="0.0"/>
        <testcase name="test_Insert_Filled_EqualToSecond" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Object" time="0.0"/>
        <testcase name="test_Insert_Filled_Internal" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Object" time="0.0"/>
        <testcase name="test_Insert_Filled_LastButOne" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Object" time="0.0"/>
        <testcase name="test_Insert_Filled_Latter" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Object" time="0.0"/>
        <testcase name="test_Insert_Filled_NewLeftLimit" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Object" time="0.0"/>
        <testcase name="test_Insert_Filled_NewRightLimit" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Object" time="0.0"/>
        <testcase name="test_Insert_Single_Equal" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Object" time="0.0"/>
        <testcase name="test_Insert_Single_Higher" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Object" time="0.0"/>
        <testcase name="test_Insert_Single_Lower" classname="Bt.Tests.Core.Collections.TestOneDimTableNatural_Object" time="0.0"/>
      </testsuite>
    </testsuite>
    <testsuite name="Bt.Tests.Core.Geometry.Geometry" time="0.0">
      <testsuite name="Bt.Tests.Core.Geometry.Elementaries.TestLineSegment" time="0.0">
        <testcase name="testEqualsLineSegmentTheSameButReversedPointsTrue2" classname="Bt.Tests.Core.Geometry.Elementaries.TestLineSegment" time="0.0"/>
        <testcase name="testEqualsLineSegmentTheSameFalse1" classname="Bt.Tests.Core.Geometry.Elementaries.TestLineSegment" time="0.0"/>
        <testcase name="testEqualsLineSegmentTheSameFalse2" classname="Bt.Tests.Core.Geometry.Elementaries.TestLineSegment" time="0.0"/>
        <testcase name="testEqualsLineSegmentTheSameTrue1" classname="Bt.Tests.Core.Geometry.Elementaries.TestLineSegment" time="0.0"/>
        <testcase name="testLengthFalse" classname="Bt.Tests.Core.Geometry.Elementaries.TestLineSegment" time="0.0"/>
        <testcase name="testLengthTrue" classname="Bt.Tests.Core.Geometry.Elementaries.TestLineSegment" time="0.0"/>
        <testcase name="testShiftLineSegmentFalse" classname="Bt.Tests.Core.Geometry.Elementaries.TestLineSegment" time="0.0"/>
        <testcase name="testShiftLineSegmentTrue" classname="Bt.Tests.Core.Geometry.Elementaries.TestLineSegment" time="0.0"/>
        <testcase name="test_toString" classname="Bt.Tests.Core.Geometry.Elementaries.TestLineSegment" time="0.0"/>
      </testsuite>
      <testsuite name="Bt.Tests.Core.Geometry.Elementaries.TestPoint" time="0.0">
        <testcase name="test_Distance_EqualPoints_True" classname="Bt.Tests.Core.Geometry.Elementaries.TestPoint" time="0.0"/>
        <testcase name="test_Distance_OtherPoints_False" classname="Bt.Tests.Core.Geometry.Elementaries.TestPoint" time="0.0"/>
        <testcase name="test_Distance_OtherPoints_True" classname="Bt.Tests.Core.Geometry.Elementaries.TestPoint" time="0.0"/>
        <testcase name="test_Equals_EqualPoints_True" classname="Bt.Tests.Core.Geometry.Elementaries.TestPoint" time="0.0"/>
        <testcase name="test_Equals_OtherPoints_False" classname="Bt.Tests.Core.Geometry.Elementaries.TestPoint" time="0.0"/>
        <testcase name="test_Shift_False" classname="Bt.Tests.Core.Geometry.Elementaries.TestPoint" time="0.0"/>
        <testcase name="test_Shift_True" classname="Bt.Tests.Core.Geometry.Elementaries.TestPoint" time="0.0"/>
        <testcase name="test_toString" classname="Bt.Tests.Core.Geometry.Elementaries.TestPoint" time="0.0"/>
      </testsuite>
      <testsuite name="Bt.Tests.Core.Geometry.Shapes.TestShapes" time="0.0">
        <testcase name="testCreateSet" classname="Bt.Tests.Core.Geometry.Shapes.TestShapes" time="0.0"/>
        <testcase name="test_Create_Circle" classname="Bt.Tests.Core.Geometry.Shapes.TestShapes" time="0.0"/>
        <testcase name="test_Create_Triangle" classname="Bt.Tests.Core.Geometry.Shapes.TestShapes" time="0.0">
          <error>java.util.IllegalFormatConversionException: f != java.lang.String&#13;
	at java.util.Formatter$FormatSpecifier.failConversion(Unknown Source)&#13;
	at java.util.Formatter$FormatSpecifier.printFloat(Unknown Source)&#13;
	at java.util.Formatter$FormatSpecifier.print(Unknown Source)&#13;
	at java.util.Formatter.format(Unknown Source)&#13;
	at java.util.Formatter.format(Unknown Source)&#13;
	at java.lang.String.format(Unknown Source)&#13;
	at Bt.Core.Geometry.Shapes.Triangle.toString(Triangle.java:30)&#13;
	at java.lang.String.valueOf(Unknown Source)&#13;
	at java.io.PrintStream.println(Unknown Source)&#13;
	at Bt.Tests.Core.Geometry.Shapes.TestShapes.test_Create_Triangle(TestShapes.java:54)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at junit.framework.TestCase.runTest(TestCase.java:176)&#13;
	at junit.framework.TestCase.runBare(TestCase.java:141)&#13;
	at junit.framework.TestResult$1.protect(TestResult.java:122)&#13;
	at junit.framework.TestResult.runProtected(TestResult.java:142)&#13;
	at junit.framework.TestResult.run(TestResult.java:125)&#13;
	at junit.framework.TestCase.run(TestCase.java:129)&#13;
	at junit.framework.TestSuite.runTest(TestSuite.java:252)&#13;
	at junit.framework.TestSuite.run(TestSuite.java:247)&#13;
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</error>
        </testcase>
      </testsuite>
    </testsuite>
  </testsuite>
</testrun>
